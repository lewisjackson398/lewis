{"version":3,"sources":["components/Sidebar/styles.js","components/Sidebar/Sidebar.js","components/Sidebar/index.js","components/UserHeader/styles.js","components/UserHeader/index.js","components/UserHeader/UserHeader.js","components/MobileNav/styles.js","components/MobileNav/index.js","components/MobileNav/MobileNav.js","components/Layout/styles.js","components/Layout/index.js","components/Layout/Layout.js","styles.js","pages/Me/styles.js","pages/Me/index.js","pages/Me/Me.js","pages/Projects/styles.js","pages/Projects/index.js","pages/Projects/Projects.js","pages/Work/styles.js","pages/Work/index.js","pages/Work/Work.js","pages/Education/styles.js","pages/Education/index.js","pages/Education/Education.js","pages/index.js","App.js","serviceWorker.js","index.js"],"names":["StyledSideNav","styled","SideNav","items","name","path","Sidebar","location","useLocation","isFixedNav","expanded","isChildOfHeader","aria-label","map","i","isActive","pathname","element","Link","to","key","HeaderContainer","div","isHome","Header","Image","img","ViewResumeLink","a","UserHeader","user","src","basics","picture","href","username","target","rel","label","email","phone","region","Container","Spacer","NavWrapper","NavLink","NavButton","Button","MobileNav","hasIconOnly","renderIcon","User32","iconDescription","tooltipPosition","Code32","Portfolio32","Education32","StyledContent","Content","Layout","children","SectionTitle","h3","Paragraph","p","Pill","span","blue","Paragraph2","ProfileLink","li","Me","summary","skills","skill","profiles","profile","network","url","ProjectItem","white","ProjectTitle","h4","SkillContainer","Projects","projects","project","githubUrl","languages","libraries","item","j","WorkItem","WorkTitle","JobTitle","Work","work","position","company","start","year","end","EducationItem","Institution","Degree","Education","education","institution","studyType","gpa","description","Pages","exact","App","useState","setUser","useEffect","fetch","then","res","json","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.49831544.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport { SideNav } from 'carbon-components-react/lib/components/UIShell'\r\n\r\nexport const StyledSideNav = styled(SideNav)`\r\n  @media (max-width: 640px) {\r\n    display: none;\r\n  }\r\n`","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { SideNavItems, SideNavLink } from 'carbon-components-react/lib/components/UIShell';\r\n\r\nimport { StyledSideNav } from './styles';\r\n\r\nconst items = [\r\n    { name: 'Me', path: '/' },\r\n    { name: 'Projects', path: '/projects' },\r\n    { name: 'Work', path: '/work' },\r\n    { name: 'Education', path: '/education' },\r\n];\r\n\r\nconst Sidebar = () => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <StyledSideNav isFixedNav expanded isChildOfHeader={false} aria-label=\"Side navigation\">\r\n            <SideNavItems>\r\n                {items.map(i => (\r\n                    <SideNavLink\r\n                        isActive={\r\n                            location.pathname === '/' && i.path === '/' ? true : location.pathname === i.path\r\n                        }\r\n                        element={Link}\r\n                        to={i.path}\r\n                        key={i.name}\r\n                    >\r\n                        {i.name}\r\n                    </SideNavLink>\r\n                ))}\r\n            </SideNavItems>\r\n        </StyledSideNav>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","import Sidebar from \"./Sidebar\"\r\nexport default Sidebar","import styled from 'styled-components';\r\n\r\nexport const HeaderContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  @media (max-width: 640px) {\r\n    display: ${({ isHome }) => (!isHome ? 'none' : 'flex')};\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  @media (max-width: 640px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 200px;\r\n  margin-right: 1rem;\r\n  border-radius: 2px;\r\n`;\r\n\r\nexport const ViewResumeLink = styled.a`\r\n  display: flex;\r\n  text-decoration: none;\r\n  padding: 0.75rem 1.5rem;\r\n  font-weight: bold;\r\n  align-items: center;\r\n  margin-top: 1rem;\r\n  border: 2px solid #2ecc40;\r\n  background-color: rgba(46, 204, 64, 0.3);\r\n  transition: background-color 250ms ease;\r\n  &:hover {\r\n    background-color: #2ecc40;\r\n  }\r\n  svg {\r\n    fill: white;\r\n    margin-left: 8px;\r\n  }\r\n`;","import UserHeader from './UserHeader'\r\nexport default UserHeader","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { ArrowRight16 } from '@carbon/icons-react';\r\n\r\nimport { HeaderContainer, Header, Image, ViewResumeLink } from './styles';\r\n\r\nconst UserHeader = ({ user }) => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <HeaderContainer isHome={location.pathname === '/'}>\r\n            <Header>\r\n                <Image src={user.basics.picture} />\r\n                <div>\r\n                    <h2>{user.basics.name}</h2>\r\n                    <h4>\r\n                        <a\r\n                            href={`https://gitconnected.com/${user.basics.username}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer noopener\"\r\n                        >\r\n                            @{user.basics.username}\r\n                        </a>\r\n                    </h4>\r\n                    \r\n                    <p>{user.basics.label}</p>\r\n                    <p>{user.basics.email}</p>\r\n                    <p>{user.basics.phone}</p>\r\n                    <p>{user.basics.region}</p>\r\n                </div>\r\n            </Header>\r\n            <div>\r\n                <ViewResumeLink\r\n                    href={`https://gitconnected.com/${user.basics.username}/resume`}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    <span>View Résumé</span>\r\n                    <ArrowRight16 />\r\n                </ViewResumeLink>\r\n            </div>\r\n        </HeaderContainer>\r\n    );\r\n};\r\n\r\nexport default UserHeader;","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'carbon-components-react/lib/components/Button';\r\n\r\nexport const Container = styled.div`\r\n  display: none;\r\n  @media (max-width: 640px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const Spacer = styled.div`\r\n  height: 48px;\r\n`;\r\n\r\nexport const NavWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  width: 100vw;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  width: 25%;\r\n`;\r\n\r\nexport const NavButton = styled(Button)`\r\n  width: 100%;\r\n  justify-content: center;\r\n`;","import MobileNav from './MobileNav'\r\nexport default MobileNav","import React from 'react'\r\nimport { User32, Code32, Portfolio32, Education32 } from '@carbon/icons-react'\r\n\r\nimport { Container, Spacer, NavWrapper, NavButton, NavLink } from './styles'\r\n\r\nconst MobileNav = () => {\r\n    return (\r\n        <Container>\r\n            <Spacer />\r\n            <NavWrapper>\r\n                <NavLink to=\"/\">\r\n                    <NavButton\r\n                        hasIconOnly\r\n                        renderIcon={User32}\r\n                        iconDescription=\"Me\"\r\n                        tooltipPosition=\"bottom\"\r\n                    />\r\n                </NavLink>\r\n                <NavLink to=\"/projects\">\r\n                    <NavButton\r\n                        hasIconOnly\r\n                        renderIcon={Code32}\r\n                        iconDescription=\"Projects\"\r\n                        tooltipPosition=\"bottom\"\r\n                    />\r\n                </NavLink>\r\n                <NavLink to=\"/work\">\r\n                    <NavButton\r\n                        hasIconOnly\r\n                        renderIcon={Portfolio32}\r\n                        iconDescription=\"Work\"\r\n                        tooltipPosition=\"bottom\"\r\n                    />\r\n                </NavLink>\r\n                <NavLink to=\"/education\">\r\n                    <NavButton\r\n                        hasIconOnly\r\n                        renderIcon={Education32}\r\n                        iconDescription=\"Education\"\r\n                        tooltipPosition=\"bottom\"\r\n                    />\r\n                </NavLink>\r\n            </NavWrapper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MobileNav","import styled from 'styled-components'\r\nimport { Content } from 'carbon-components-react/lib/components/UIShell'\r\n\r\nexport const StyledContent = styled(Content)`\r\n  min-height: 100vh;\r\n  @media (max-width: 640px) {\r\n    margin-left: 0 !important;\r\n  }\r\n`","import Layout from './Layout'\r\nexport default Layout","import React from 'react';\r\nimport Sidebar from '../Sidebar';\r\nimport UserHeader from '../UserHeader';\r\nimport MobileNav from '../MobileNav';\r\n\r\nimport { StyledContent } from './styles';\r\n\r\nconst Layout = ({ user, children }) => {\r\n    return (\r\n        <>\r\n            <MobileNav />\r\n            <Sidebar />\r\n            <StyledContent>\r\n                <UserHeader user={user} />\r\n                <div>{children}</div>\r\n            </StyledContent>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Layout;","import styled from 'styled-components';\r\nimport { blue } from '@carbon/colors';\r\n\r\nexport const SectionTitle = styled.h3`\r\n    margin-top: 1.5rem;\r\n    margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n    white-space: pre-wrap;\r\n`;\r\n\r\nexport const Pill = styled.span`\r\n  display: inline-block;\r\n  margin-right: 0.75rem;\r\n  margin-bottom: 0.75rem;\r\n  padding: 0.5rem 1rem;\r\n  background-color: ${blue[20]};\r\n  color: ${blue[70]};\r\n  border: 3px solid ${blue[70]};\r\n  border-radius: 2px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const Paragraph2 = styled.p`\r\n    white-space: pre-wrap;\r\n    column-count: 2;\r\n`;","import styled from 'styled-components'\r\n\r\nexport const ProfileLink = styled.li`\r\n  margin-right: 0.5rem;\r\n  margin-bottom: 0.5rem;\r\n  display: inline-block;\r\n  font-size: 18px;\r\n`","import Me from './Me'\r\nexport default Me","import React from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { SectionTitle, Paragraph, Pill } from '../../styles';\r\nimport { ProfileLink } from './styles';\r\n\r\nconst Me = ({ user }) => {\r\n    return (\r\n        <Layout user={user}>\r\n            <div>\r\n                <SectionTitle>About Me</SectionTitle>\r\n                <Paragraph>{user.basics.summary}</Paragraph>\r\n\r\n            </div>\r\n            <div>\r\n                <SectionTitle>Skills</SectionTitle>\r\n                <div>\r\n                    {user.skills.map(skill => (\r\n                        <Pill key={skill.name}>{skill.name}</Pill>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <SectionTitle>Profiles</SectionTitle>\r\n                <ul>\r\n                    {user.basics.profiles.map((profile, i) => (\r\n                        <ProfileLink key={profile.network}>\r\n                            {i !== 0 && ' | '}\r\n                            <a href={profile.url} target=\"_blank\" rel=\"noreferrer noopener\">\r\n                                {profile.network}\r\n                            </a>\r\n                        </ProfileLink>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Me;","import styled from 'styled-components'\r\nimport { white } from '@carbon/colors'\r\n\r\nexport const ProjectItem = styled.li`\r\n  margin-top: 1rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 1px solid ${white};\r\n`\r\n\r\nexport const ProjectTitle = styled.h4`\r\n  font-weight: bold;\r\n`\r\n\r\nexport const SkillContainer = styled.div`\r\n  margin-top: 1.2rem;\r\n`","import Projects from './Projects'\r\nexport default Projects","import React from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { SectionTitle, Pill } from '../../styles';\r\nimport { ProjectItem, ProjectTitle, SkillContainer } from './styles';\r\n\r\nconst Projects = ({ user }) => {\r\n    return (\r\n        <Layout user={user}>\r\n            <div>\r\n                <SectionTitle>Projects</SectionTitle>\r\n                <ul>\r\n                    {user.projects.map((project, i) => (\r\n                        <ProjectItem key={i}>\r\n                            <ProjectTitle><a href={project.githubUrl}>{project.name}</a></ProjectTitle>\r\n                            <p>{project.summary}</p>\r\n                            <SkillContainer>\r\n                                {[...project.languages, ...project.libraries].map((item, j) => (\r\n                                    <Pill key={j}>{item}</Pill>\r\n                                ))}\r\n                            </SkillContainer>\r\n                        </ProjectItem>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Projects;","import styled from 'styled-components'\r\nimport { white } from '@carbon/colors'\r\n\r\nexport const WorkItem = styled.li`\r\n  margin-top: 1rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 1px solid ${white};\r\n`\r\n\r\nexport const WorkTitle = styled.h4`\r\n  font-weight: bold;\r\n`\r\n\r\nexport const JobTitle = styled.p`\r\n  font-weight: bold;\r\n  display: inline-block;\r\n`","import Work from './Work'\r\nexport default Work","import React from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { SectionTitle, Paragraph } from '../../styles';\r\nimport { WorkItem, WorkTitle, JobTitle } from './styles';\r\n\r\nconst Work = ({ user }) => {\r\n    return (\r\n        <Layout user={user}>\r\n            <div>\r\n                <SectionTitle>Work</SectionTitle>\r\n                <ul>\r\n                    {user.work.map((work, i) => (\r\n                        <WorkItem key={i}>\r\n                            <WorkTitle>{work.position}</WorkTitle>\r\n                            <div>\r\n                                <JobTitle>{work.company}</JobTitle> <span>{work.location}</span>\r\n                                {' - '}\r\n                                <span>\r\n                                    {work.start.year} to {work.end.year}\r\n                                </span>\r\n                            </div>\r\n                            <Paragraph>{work.summary}</Paragraph>\r\n                        </WorkItem>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Work;","import styled from 'styled-components'\r\nimport { white } from '@carbon/colors'\r\n\r\nexport const EducationItem = styled.li`\r\n  margin-top: 1rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 1px solid ${white};\r\n`\r\n\r\nexport const Institution = styled.h4`\r\n  font-weight: bold;\r\n`\r\n\r\nexport const Degree = styled.p`\r\n  font-weight: bold;\r\n  display: inline-block;\r\n`","import Education from './Education'\r\nexport default Education","import React from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { SectionTitle, Paragraph2 } from '../../styles';\r\nimport { EducationItem, Institution, Degree } from './styles';\r\n\r\nconst Education = ({ user }) => {\r\n    return (\r\n        <Layout user={user}>\r\n            <div>\r\n                <SectionTitle>Education</SectionTitle>\r\n                <ul>\r\n                    {user.education.map((education, i) => (\r\n                        <EducationItem key={i}>\r\n                            <Institution>{education.institution}</Institution>\r\n                            <div>\r\n                                <Degree>\r\n                                    {education.studyType}  - {education.gpa} - {education.start.year} to {education.end.year} \r\n                                </Degree>\r\n                            </div>\r\n                            <Paragraph2>{education.description}</Paragraph2>\r\n                        </EducationItem>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Education;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Me from './Me';\r\nimport Projects from './Projects';\r\nimport Work from './Work';\r\nimport Education from './Education';\r\n\r\nconst Pages = ({ user }) => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Me user={user} />\r\n                </Route>\r\n                <Route path=\"/projects\">\r\n                    <Projects user={user} />\r\n                </Route>\r\n                <Route path=\"/work\">\r\n                    <Work user={user} />\r\n                </Route>\r\n                <Route path=\"/education\">\r\n                    <Education user={user} />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default Pages;","import React, { useState, useEffect } from 'react';\nimport Pages from '../src/pages';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // NOTE: Use your username below\n    fetch('https://gitconnected.com/v1/portfolio/lewisjackson398')\n      .then(res => res.json())\n      .then(user => {\n        setUser(user);\n      });\n  }, []);\n\n  if (!user) {\n    return <div />;\n  }\n\n  return <Pages user={user} />;\n}\n\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}